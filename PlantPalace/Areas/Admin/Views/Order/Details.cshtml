@model OrderVM
 <style>
    .downLink {
        position: relative;
        border: 1px solid #ccc;
        border-radius: 6px;
        text-decoration: none;
        padding: 35px 20px 13px 60px;
        margin-right: 40px;
        color: #444;
        background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/41294/download.png') 2px 0 no-repeat;
    }

        .downLink :hover {
            border-color: #444;
            box-shadow: 0 0 10px #444;
        }

        .downLink :active {
            border-color: #ccc;
            box-shadow: none;
        }

        .downLink [href$=".pdf"]:before {
            position: absolute;
            width: 62px;
            height: 72px;
            top: 2px;
            left: 2px;
            transition: all .4s;
        }

        .downLink [href$=".pdf"]:before {
            content: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/41294/pdf.png');
        }

        .downLink [href$=".pdf"]:hover:before {
            opacity: 0;
        }

        .downLink [href$=".ppt"]:after, a[href$=".pdf"]:after {
            content: "Download";
            position: absolute;
            top: 10px;
            left: 60px;
            color: #aaa;
        }
 </style>
<form method="post">
    <input asp-for="OrderHeader.Id" hidden />
    <br />
    <div class="container">
        <div class="card">
            <div class="card-header bg-dark text-light ml-0">
                <div class="container row">
                    <div class="col-12 d-none d-md-block col-md-6 pb-1">
                        <i class="fas fa-shopping-cart"></i> &nbsp; Order Summary
                    </div>
                    <div class="col-12 col-md-4 offset-md-2 text-right">
                        <a asp-action="Index" class="btn btn-outline-info form-control btn-sm">Back to Orders</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container rounded p-2">
                    <div class="row">
                        <div class="col-12 col-lg-6 pb-4">
                            <div class="row">
                                <h4 class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="text-primary">PickUp Details:</span>
                                </h4>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Name</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.Name" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.Name" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.Name" readonly type="text" class="form-control" />
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Phone</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.PhoneNumber" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.PhoneNumber" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.PhoneNumber" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Address</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.StreetAddress" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.StreetAddress" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.StreetAddress" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">City</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.City" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.City" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.City" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">State</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.State" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.State" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.State" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Zip Code</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin) || User.IsInRole(SD.Role_Employee))
                                    {
                                        <input asp-for="OrderHeader.PostalCode" type="text" class="form-control" />
                                        <span asp-validation-for="OrderHeader.PostalCode" class="text-danger"></span>
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.PostalCode" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Email</div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.ApplicationUser.Email" readonly type="text" class="form-control" />
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Order Date</div>
                                <div class="col-9">
                                    <input value="@Model.OrderHeader.OrderDate.ToShortDateString()" readonly type="text" class="form-control" />
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Carrier</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.Carrier" id="carrier" type="text" class="form-control" />
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.Carrier" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Tracking</div>
                                <div class="col-9">
                                    @if (User.IsInRole(SD.Role_Admin))
                                    {
                                        <input asp-for="OrderHeader.TrackingNumber" id="trackingNumber" type="text" class="form-control" />
                                    }
                                    else
                                    {
                                        <input asp-for="OrderHeader.TrackingNumber" readonly type="text" class="form-control" />
                                    }
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">Shipping Date</div>
                                <div class="col-9">
                                    <input value="@Model.OrderHeader.ShippingDate.ToShortDateString()" readonly type="text" class="form-control" />
                                </div>
                            </div>

                            @if (User.IsInRole(SD.Role_Admin) && Model.OrderHeader.SessionId != null && Model.OrderHeader.PaymentIntentId != null)
                            {
                                <div class="row my-1">
                                    <div class="col-3">Session ID</div>
                                    <div class="col-9">

                                        <input asp-for="OrderHeader.SessionId" readonly type="text" class="form-control" />

                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Payment Intent ID</div>
                                    <div class="col-9">

                                        <input asp-for="OrderHeader.PaymentIntentId" readonly type="text" class="form-control" />

                                    </div>
                                </div>
                            }
                            <div class="row my-1">

                                @if (Model.OrderHeader.SessionId == null)
                                {
                                    <div class="col-3">Payment Due Date</div>
                                    <div class="col-9">
                                        <input value="@Model.OrderHeader.PaymentDueDate.ToShortDateString()" readonly type="text" class="form-control" />
                                    </div>

                                }
                                else
                                {
                                    <div class="col-3">Payment Date</div>
                                    <div class="col-9">
                                        <input value="@Model.OrderHeader.PaymentDate.ToShortDateString()" readonly type="text" class="form-control" />
                                    </div>
                                }

                            </div>
                            <div class="row my-1">
                                <div class="col-3">Payment Status</div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.PaymentStatus" readonly type="text" class="form-control" />
                                </div>
                            </div>
                            @if (User.IsInRole(SD.Role_Admin))
                            {
                                <button type="submit" asp-action="UpdateOrderDetail" class="btn btn-warning form-control my-1">Update Order Details</button>
                            }
                        </div>
                        <div class="col-12 col-lg-5 offset-lg-1">
                            <h4 class="d-flex justify-content-between align-items-center mb-3">
                                <span class="text-primary">Order Summary</span>
                            </h4>
                            <label class="btn btn-outline-primary form-control my-2">Order Status - @Model.OrderHeader.OrderStatus</label>

                            <ul class="list-group mb-3">
                                @foreach (var detail in Model.OrderDetail)
                                {
                                    <li class="list-group-item d-flex justify-content-between p-2">
                                        <div class="row container">
                                            <div class="col-8">

                                                <h6 class="my-0 text-primary">@detail.Product.Name</h6>
                                                <small class="text-muted">Price : ₹@detail.Price</small><br />
                                                <small class="text-muted">Quantity : @detail.Count</small>
                                            </div>
                                            <div class="col-4 text-end">
                                                <p class="text-success">₹@((detail.Count * detail.Price))</p>
                                                @if (Model.OrderHeader.OrderStatus != SD.StatusRefunded &&
                                               Model.OrderHeader.OrderStatus != SD.StatusCancelled &&
                                               Model.OrderHeader.OrderStatus != SD.StatusShipped && User.IsInRole(SD.Role_Customer))
                                                {
                                                    <button type="button" onclick="ProductCancel(@detail.Id)" class="btn btn-danger">Cancel</button>

                                                }

                                                @if(Model.OrderHeader.OrderStatus == SD.StatusShipped && User.IsInRole(SD.Role_Customer))
                                                {
                                                    var Return = Model.ProductReturnList.FirstOrDefault(u => u.OrderDetailId == detail.Id);

                                                    @if (Return == null)
                                                    {
                                                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#ReasonPopUp" onclick="ReturnModal(@detail.Id)">Return</button>

                                                    }
                                                    else
                                                    {
                                                        @if (Return.ReturnStatus == SD.ReturnPending)
                                                        {
                                                            <button type="button" class="btn btn-warning">@Return.ReturnStatus</button>

                                                        }
                                                        else
                                                        {
                                                            @if (Return.ReturnStatus == SD.ReturnRejected)
                                                            {
                                                                <button type="button" class="btn btn-danger">@Return.ReturnStatus</button>

                                                            }
                                                            else
                                                            {
                                                                @if (Return.ReturnStatus == SD.ReturnApproved)
                                                                {
                                                                    <button type="button" class="btn btn-success">@Return.ReturnStatus</button>
                                                                   <div class="row">
                                                                       contact seller : 8089342686
                                                                   </div>


                                                                }
                                                            }
                                                        }
                                                    }

                                            }

                                            </div>
                                        </div>
                                    </li>
                                }
                                <li class="list-group-item bg-primary">
                                    <div class="row container">
                                        <div class="col-6">
                                            <h5 class="text-white">TOTAL </h5>
                                        </div>
                                        <div class="col-6 text-end">
                                            <h5 class="text-white">₹@Model.OrderHeader.OrderTotal</h5>
                                        </div>
                                    </div>
                                </li>
                            </ul>

                            @if (Model.OrderHeader.PaymentStatus == SD.PaymentStatusDelayedPayment &&
                            Model.OrderHeader.OrderStatus == SD.StatusShipped)
                            {
                                <button type="button" onclick="confirmSetAsPaid(@Model.OrderHeader.Id)" class="btn btn-success form-control my-1">
                                    Set As Paid
                                </button>

                            }
                            @if (User.IsInRole(SD.Role_Admin))
                            {
                                @if (Model.OrderHeader.OrderStatus == SD.StatusApproved)
                                {
                                    <button type="submit" asp-action="StartProcessing"
                                            class="btn btn-primary form-control my-1">
                                        Start Processing
                                    </button>
                                }
                                @if (Model.OrderHeader.OrderStatus == SD.StatusInProcess)
                                {
                                    <button type="submit" asp-action="ShipOrder" onclick="return validateInput()" 
                                            class="btn btn-primary form-control my-1">
                                        Ship Order
                                    </button>
                                }
                                @if (Model.OrderHeader.PaymentStatus == SD.PaymentStatusPending && Model.OrderHeader.OrderStatus == SD.StatusShipped)
                                {
                                    <button type="button" onclick="confirmSetAsPaid(@Model.OrderHeader.Id)" class="btn btn-success form-control my-1">
                                        Set As Paid
                                    </button>
                                }
                                
                            }
                            @if (Model.OrderHeader.OrderStatus != SD.StatusRefunded &&
                            Model.OrderHeader.OrderStatus != SD.StatusCancelled &&
                            Model.OrderHeader.OrderStatus != SD.StatusShipped)
                            {
                                @* <button asp-action="CancelOrder" type="submit" class="btn btn-danger form-control my-1">Cancel Order</button> *@
                                <button type="button" onclick="confirmCancelOrder(@Model.OrderHeader.Id)" class="btn btn-danger form-control my-1">Cancel Order</button>
                            }
                            @if(Model.OrderHeader.OrderStatus == SD.StatusShipped)
                            {
                                <a asp-action="Invoice" asp-route-id="@Model.OrderHeader.Id" class="btn btn-dark form-control my-1"><i class="bi bi-filetype-pdf fs-5 text"></i>&nbsp; Downloand Invoice</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="modal fade" id="ReasonPopUp" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Reason For Return</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="AddReturn">
                    <input type="text" class="form-control" id="OrderHeader-Id" name="orderHeaderId" value="@Model.OrderHeader.Id" hidden>

                    <div class="form-group">
                        <input type="hidden" name="userId" value="@Model.OrderHeader.ApplicationUserId" />
                        <label for="recipient-name" class="col-form-label">Ordered Product Id:</label>
                        <input type="text" class="form-control" id="OrderDetail-Id" name="orderDetailId" readonly>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Message:</label>
                        <textarea class="form-control" id="message-text" name="Reason"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Send Reason</button>
                    </div>
                </form>
            </div>
            
        </div>
    </div>
</div>

@section Scripts{

    <partial name="_ValidationScriptsPartial" />
    <script>
        function ReturnModal(OrderDetailID)
        {
            $('#OrderDetail-Id').val(OrderDetailID);
        }
        
    </script>

    <script>
        function validateInput() {
            if (document.getElementById("trackingNumber").value == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please enter tracking number!',
                });
                return false;
            }
            if (document.getElementById("carrier").value == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please enter carrier!',
                });
                return false;
            }
            return true;
        }
    </script>
    <script>
        function confirmSetAsPaid(orderHeaderId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, set as paid!"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make an Ajax request
                    $.ajax({
                        url: "/Admin/Order/SetAsPaid/" + orderHeaderId, // Update with the correct controller and action
                        type: "POST",
                        data: { /* You can pass data here if needed */ },
                        success: function (data) {
                            // Handle success response
                            Swal.fire({
                                title: "Set as paid!",
                                text: "The action was successful.",
                                icon: "success"
                            }).then(()=>{
                                location.reload();
                            });
                            // Optionally, you can update the UI or perform other actions
                        },
                        error: function (error) {
                            // Handle error response
                            Swal.fire({
                                title: "Error",
                                text: "There was an error setting as paid.",
                                icon: "error"
                            });
                            console.error("Error setting as paid", error);
                        }
                    });
                }
            });
        }

        function ProductCancel(orderDetailId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, cancel the product!"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make an Ajax request
                    $.ajax({
                        url: "/Admin/Order/CancelProduct/",
                        type: "POST",
                        data: {
                            orderDetailId: orderDetailId
                            // You can add more data here if needed
                        },
                        success: function (data) {
                            // Handle success response
                            Swal.fire({
                                title: "Product Canceled!",
                                text: "The action was successful.",
                                icon: "success"
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (error) {
                            // Handle error response
                            Swal.fire({
                                title: "Error",
                                text: "There was an error on canceling.",
                                icon: "error"
                            });
                        }
                    });
                }
            });
        }

        function confirmCancelOrder(orderHeaderId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, cancel the order!"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make an Ajax request or submit the form with orderHeaderId
                    $.ajax({
                        url: "/Admin/order/CancelOrder/"+orderHeaderId,
                        type: "POST",

                        success: function (data) {
                            // Handle success response
                            Swal.fire({
                                title: "Order Canceled!",
                                text: "The action was successful.",
                                icon: "success"
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (error) {
                            // Handle error response
                            Swal.fire({
                                title: "Error",
                                text: "There was an error on canceling the order.",
                                icon: "error"
                            });
                        }
                    });
                }
            });
        }
    </script>
}