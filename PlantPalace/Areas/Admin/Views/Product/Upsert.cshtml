@model ProductVM
@{
}
<form asp-action="Upsert" asp-controller="Product" enctype="multipart/form-data">
    <div class="border p-3 mt-4 mb-5">
        <div class="row pb-2">
            <h2 class="text-primary">
                @(Model.Product.Id != 0 ? "Update" : "Create") Product
            </h2>
            <hr />
        </div>
        <div asp-validation-summary="All"></div>
        <input asp-for="Product.Id" type="hidden" />
        <input asp-for="Product.ImageUrl" type="hidden" />
        <div class="row d-flex justify-content-center">
            <img src="@Model.Product.ImageUrl" style="border-radius:20px; border :1px solid #ffff ;width:20%" />
        </div>
        <div class="row p-1 mb-3">
            <label  class="p-0">Product Image</label>
            <input type="file" name="file" class="form-control" />
        </div>
        <div class="row p-1 mb-3">
            <label asp-for="Product.Name" class="p-0"></label>
            <input asp-for="Product.Name" class="form-control" />
            <span asp-validation-for="Product.Name" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
        <select asp-for="Product.categoryId" class="p-0 form-select" asp-items="@Model.CategoryList">
            <option disabled selected >--Select Category--</option>
        </select>
        <label asp-for="Product.categoryId" class="p-0"></label>
        <span asp-validation-for="Product.categoryId" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
        <label asp-for="Product.ListPrice" class="p-0"></label>
            <input asp-for="Product.ListPrice" class="form-control" />
            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
            <label asp-for="Product.Price" class="p-0"></label>
            <input asp-for="Product.Price" class="form-control" />
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
            <label asp-for="Product.Price50" class="p-0"></label>
            <input asp-for="Product.Price50" class="form-control" />
            <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
            <label asp-for="Product.Price100" class="p-0"></label>
            <input asp-for="Product.Price100" class="form-control" />
            <span asp-validation-for="Product.Price100" class="text-danger"></span>
        </div>
        <div class="row p-1 mb-3">
            <label asp-for="Product.Description" class="p-0 text-muted"></label>
            <textarea asp-for="Product.Description" class="form-control"></textarea>
        </div>
        <div class="row ">
            <div class="col-6 col-md-3">
                @if (Model.Product.Id != 0)
                {
                        <button type="submit" class="btn btn-primary form-control">Update</button>
                }
                else
                {
                    <button type="submit" class="btn btn-primary form-control">Create</button>
                }
            </div>
            <div class="col-6 col-md-3">
                <a asp-action="Index" asp-controller="Product" class="btn btn-secondary border form-control">Back TO List</a>
            </div>
        </div>
    </div>
</form>
@section Scripts{
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons   lists   table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough |  mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant"))
        });
    </script>
    @{

    <partial name="_ValidationScriptsPartial.cshtml"/>
    }
}